/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistem_rental_mobil_oo_impal.panels;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistem_rental_mobil_oo_impal.Driver;
import sistem_rental_mobil_oo_impal.model.Mobil;
import sistem_rental_mobil_oo_impal.model.Supplier;

/**
 *
 * @author Evlive
 */
public class ManageMobil extends javax.swing.JPanel {
    private Driver driver;
    private DefaultTableModel model;
    
    /**
     * Creates new form ManageMobil
     */
    public ManageMobil() {
        initComponents();
        this.setBackground(Color.WHITE);
        driver  = new Driver();
        model = (DefaultTableModel) tableMobil.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputMobilButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMobil = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        deleteMobilButton = new javax.swing.JButton();
        editMobilButton = new javax.swing.JButton();
        kirimPermintaanButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        inputMobilButton.setBackground(new java.awt.Color(0, 102, 255));
        inputMobilButton.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        inputMobilButton.setForeground(new java.awt.Color(255, 255, 255));
        inputMobilButton.setText("Input Mobil");
        inputMobilButton.setBorder(null);
        inputMobilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMobilButtonActionPerformed(evt);
            }
        });

        tableMobil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Supplier", "Nama Mobil", "Merk", "Jumlah", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableMobil);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel1.setText("Manage Mobil");

        deleteMobilButton.setBackground(new java.awt.Color(0, 102, 255));
        deleteMobilButton.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        deleteMobilButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteMobilButton.setText("Delete Mobil");
        deleteMobilButton.setBorder(null);
        deleteMobilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMobilButtonActionPerformed(evt);
            }
        });

        editMobilButton.setBackground(new java.awt.Color(0, 102, 255));
        editMobilButton.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        editMobilButton.setForeground(new java.awt.Color(255, 255, 255));
        editMobilButton.setText("Edit Mobil");
        editMobilButton.setBorder(null);
        editMobilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMobilButtonActionPerformed(evt);
            }
        });

        kirimPermintaanButton.setBackground(new java.awt.Color(0, 102, 255));
        kirimPermintaanButton.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        kirimPermintaanButton.setForeground(new java.awt.Color(255, 255, 255));
        kirimPermintaanButton.setText("Kirim permintaan");
        kirimPermintaanButton.setBorder(null);
        kirimPermintaanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kirimPermintaanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(inputMobilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteMobilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editMobilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kirimPermintaanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputMobilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteMobilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editMobilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kirimPermintaanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteMobilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMobilButtonActionPerformed
        int selectedRow = tableMobil.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Mohon untuk memilih mobil yang ingin di delete pada tabel");
        } else {
            Mobil mobil = getMobil(tableMobil.getSelectedRow()); //ambil data mobil dari database
            driver.getDb().deleteMobil(mobil.getId());
        }
        loadMobil(); 
    }//GEN-LAST:event_deleteMobilButtonActionPerformed

    private void editMobilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMobilButtonActionPerformed
        EditMobil editMobil = new EditMobil();
        editMobil.getDriver().setUserEmail(driver.getUserEmail());
        editMobil.getDriver().setUserNama(driver.getUserNama());
        editMobil.getDriver().setUserLevel(driver.getUserLevel());
        int selectedRow = tableMobil.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Mohon untuk memilih mobil yang ingin di edit pada tabel");
        } else {
            Mobil mobil = getMobil(tableMobil.getSelectedRow()); //ambil data mobil dari database
            editMobil.setMobil(mobil);
            if ("supplier".equals(driver.getUserLevel())) {
                editMobil.setNamaSupplierFieldNotEditable();
            }
            editMobil.setVisible(true);
        }
        loadMobil();
    }//GEN-LAST:event_editMobilButtonActionPerformed

    private void kirimPermintaanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kirimPermintaanButtonActionPerformed
        KirimPermintaanMobil kirimPermintaanMobil = new KirimPermintaanMobil();
        kirimPermintaanMobil.getDriver().setUserEmail(driver.getUserEmail());
        kirimPermintaanMobil.getDriver().setUserNama(driver.getUserNama());
        kirimPermintaanMobil.getDriver().setUserLevel(driver.getUserLevel());
        kirimPermintaanMobil.setVisible(true);
        loadMobil();
    }//GEN-LAST:event_kirimPermintaanButtonActionPerformed

    private void inputMobilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMobilButtonActionPerformed
        InputMobil inputMobil = new InputMobil();
        inputMobil.getDriver().setUserEmail(driver.getUserEmail());
        inputMobil.getDriver().setUserNama(driver.getUserNama());
        inputMobil.getDriver().setUserLevel(driver.getUserLevel());
        inputMobil.setVisible(true);
        loadMobil();
    }//GEN-LAST:event_inputMobilButtonActionPerformed
    
    public void loadMobil() {
        deleteListInTable();
        int i = 1;
        driver.reloadData();
        for (Mobil p : driver.getListMobil()) {
            Supplier supplier = driver.getSupplierById(p.getIdSupplier());
            if ("supplier".equals(driver.getUserLevel())) {
                if (supplier.getNama().equals(driver.getUserNama())) {
                    model.insertRow(model.getRowCount(), new Object[]{i, supplier.getNama(), p.getNama(), p.getMerk(), p.getJumlah(), p.getHarga()});                    
                }
            } else {
                model.insertRow(model.getRowCount(), new Object[]{i, supplier.getNama(), p.getNama(), p.getMerk(), p.getJumlah(), p.getHarga()});   
            }
            i++;
        }
    }
    
    public Mobil getMobil(int selectedRow) {
        Mobil mobil = new Mobil();
        String namaSupplier = "";
        String namaMobil = "";
        String merkMobil = "";
        namaSupplier = (String) tableMobil.getValueAt(selectedRow, 1);
        namaMobil = (String) tableMobil.getValueAt(selectedRow, 2);
        merkMobil = (String) tableMobil.getValueAt(selectedRow, 3);
        mobil = driver.getMobilBySupplierNamaMerk(namaSupplier, namaMobil, merkMobil);
        return mobil;
    }
    
    public void deleteListInTable() {
        model.setRowCount(0);
    }
    
    public Driver getDriver() {
        return driver;
    }
    
    public void setKirimPermintaanMobilButton(boolean status) {
        kirimPermintaanButton.setVisible(status);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteMobilButton;
    private javax.swing.JButton editMobilButton;
    private javax.swing.JButton inputMobilButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kirimPermintaanButton;
    private javax.swing.JTable tableMobil;
    // End of variables declaration//GEN-END:variables
}
